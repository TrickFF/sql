USE shop;


/* Задание 1. 
 * Составьте список пользователей users, которые осуществили хотя бы один заказ orders в интернет магазине.
 * */

-- Заполняем таблицу заказаов
INSERT INTO `orders` VALUES (1,3,'2011-02-03 12:49:57','2018-05-14 10:43:53'),(2,6,'2019-11-06 23:39:42','2019-03-02 10:09:31'),(3,6,'2016-07-29 00:33:00','2012-02-19 09:01:20'),(4,4,'2018-08-22 21:58:45','2020-03-18 02:40:09'),(5,1,'2016-02-18 19:48:14','2019-01-27 05:29:17'),(6,5,'2017-06-05 19:39:21','2011-09-13 22:07:08'),(7,1,'2019-10-21 09:16:08','2013-12-08 00:43:47'),(8,5,'2017-03-10 13:07:29','2019-05-06 08:00:54'),(9,4,'2014-03-24 00:40:41','2015-02-04 17:50:09'),(10,2,'2015-01-25 07:10:19','2014-06-23 11:20:34'),(11,4,'2016-07-25 17:49:26','2020-12-17 06:29:06'),(12,2,'2014-06-24 09:38:57','2015-10-25 12:14:51'),(13,5,'2020-04-25 22:32:21','2013-05-02 16:48:31'),(14,4,'2016-01-01 01:57:29','2015-01-23 22:53:44'),(15,5,'2017-12-07 13:01:53','2016-11-30 19:12:27'),(16,2,'2016-09-14 22:50:47','2015-05-15 11:21:00'),(17,5,'2019-12-31 00:55:00','2018-10-07 13:57:47'),(18,4,'2014-07-31 12:50:38','2011-12-28 20:51:07'),(19,4,'2020-08-17 10:38:41','2011-10-30 18:11:32'),(20,1,'2012-01-30 21:04:54','2014-12-13 17:17:03'),(21,1,'2021-01-09 03:46:57','2019-06-19 16:54:58'),(22,6,'2018-05-30 14:52:27','2020-05-07 08:15:12'),(23,3,'2015-10-30 19:27:18','2018-01-23 05:03:01'),(24,6,'2014-09-03 09:02:21','2014-09-17 19:02:52'),(25,2,'2015-07-21 20:49:01','2012-09-16 07:34:36'),(26,5,'2018-01-11 08:14:37','2019-02-01 08:07:17'),(27,5,'2015-08-08 18:05:32','2020-05-02 02:35:29'),(28,4,'2015-02-14 20:03:26','2012-02-05 04:13:06'),(29,2,'2020-08-10 08:23:58','2014-06-03 04:42:09'),(30,5,'2012-04-08 22:44:40','2014-05-29 09:56:50');

-- обновляем даты, чтобы данные создания и обновления записи не противоречили логике 
SELECT * FROM orders WHERE created_at > updated_at;
UPDATE orders SET updated_at = CURRENT_TIMESTAMP() WHERE updated_at < created_at;

-- Для наглядности удаляем все заказа от пользователя с id = 4
SELECT * FROM orders WHERE user_id = 4;
DELETE FROM orders WHERE user_id = 4;

-- результат
SELECT * FROM users WHERE id in (SELECT user_id FROM orders GROUP BY user_id);

/* Задание 2. 
 * Выведите список товаров products и разделов catalogs, который соответствует товару.
 * */

-- результат
SELECT
 p.name,
 c.name AS category
FROM
 catalogs AS c JOIN products AS p
ON c.id = p.catalog_id;


/* Задание 3. 
 * (по желанию) Пусть имеется таблица рейсов flights (id, from, to) и таблица городов cities (label, name).
 * Поля from, to и label содержат английские названия городов, поле name — русское. 
 * Выведите список рейсов flights с русскими названиями городов.
 * */

USE example;

DROP TABLE IF EXISTS flights;
CREATE TABLE flights (
  `id` SERIAL PRIMARY KEY,
  `from` VARCHAR(50) COMMENT 'Город отправления',
  `to` VARCHAR(50) COMMENT 'Город назначения'
) COMMENT = 'Рейсы';

TRUNCATE flights;
INSERT INTO flights (`from`, `to`) VALUES 
('moscow', 'omsk'),
('novgorod', 'kazan'),
('irkutsk', 'moscow'),
('omsk', 'irkutsk'),
('moscow', 'kazan');


DROP TABLE IF EXISTS cities;
CREATE TABLE cities (
  `id` SERIAL PRIMARY KEY,
  `label` VARCHAR(50) COMMENT 'Название города ENG',
  `name` VARCHAR(50) COMMENT 'Название города RU'
) COMMENT = 'Города';


TRUNCATE cities;
INSERT INTO cities (`label`, `name`) VALUES 
('moscow', 'Москва'),
('irkutsk', 'Иркутск'),
('novgorod', 'Новгород'),
('kazan', 'Казань'),
('omsk', 'Омск');

SELECT * FROM flights;

-- результат
SELECT
 f.id,
 (SELECT c.name FROM cities c WHERE f.from = c.label) AS 'from',
 (SELECT c.name FROM cities c WHERE f.to = c.label) AS 'to'
FROM
 flights AS f JOIN cities AS c
GROUP BY f.id
ORDER BY f.id;
